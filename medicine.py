# streamlit_medicinal_plants.py

import streamlit as st
import tensorflow as tf
import numpy as np
from tensorflow.keras.preprocessing import image
import os
from pathlib import Path
# ================================
# Custom Background with Ayurvedic Pattern
# ================================
st.set_page_config(page_title="ЁЯМ┐ Indian knowledge system ЁЯМ┐", layout="centered")

st.title("ЁЯМ┐ Indian knowledge system ЁЯМ┐")

page_bg = """
<style>
[data-testid="stAppViewContainer"] {
    background-image: url("https://www.transparenttextures.com/patterns/arabesque.png");
    background-size: auto;
    background-color: #FFD700; /* leaf base */
}

[data-testid="stHeader"] {
    background-color: rgba(0,0,0,0);
}

[data-testid="stSidebar"] {
    background-color: #FFF8DC; /* light green for sidebar */
}
</style>
"""
st.markdown(page_bg, unsafe_allow_html=True)

@st.cache_resource
def load_model():
    return tf.keras.models.load_model("medicinal_plant_cnn.h5")

model = load_model()
st.markdown("""
### ЁЯзн About Indian Knowledge Systems (IKS)  
Indian Knowledge Systems (IKS) represent the holistic and indigenous wisdom of India,  
covering fields such as **Ayurveda, Yoga, Siddha, Unani, and Ethnobotany**.  
In Ayurveda, medicinal plants are not just remedies but part of a **sustainable lifestyle**  
that emphasizes balance between **mind, body, spirit, and environment**.

This application uses **AI + IKS** to recognize medicinal plants and provides:  
- ЁЯМ▒ **Scientific & Common Names**  
- ЁЯМ┐ **Medicinal Properties**  
- ЁЯТК **Therapeutic Uses (Traditional & Ayurvedic)**  
- ЁЯз┤ **Curing Applications in Indian Systems**  

тЬи By blending **modern machine learning** with **traditional Ayurvedic knowledge**,  
this tool aims to support research, education, and preservation of IndiaтАЩs medicinal heritage.
""")
# =============================
# Dataset class names
# =============================
data_dir = r"e:/medicinal plant/Medicinal_Leaf_Dataset/Compressed_dataset"
class_names = sorted(os.listdir(data_dir))

# =============================
# Knowledge Base (English + Tamil)
# =============================
plant_info = {
    "Ashok": {
        "scientific": "Saraca asoca",
        "common_en": "Ashoka Tree",
        "common_ta": "роЕроЪрпЛроХ рооро░роорпН",
        "properties_en": "Uterine tonic, anti-inflammatory, analgesic",
        "properties_ta": "роХро░рпБрокрпНрокрпИ роиро▓родрпНродро┐ро▒рпНроХрпБ, роЕро┤ро▒рпНроЪро┐ роХрпБро▒рпИрокрпНрокро╛ройрпН, ро╡ро▓ро┐роиро┐ро╡ро╛ро░рогро┐",
        "therapeutic_en": "Used in Ayurveda for menstrual disorders, uterine health",
        "therapeutic_ta": "роЖропрпБро░рпНро╡рпЗродродрпНродро┐ро▓рпН рооро╛родро╡ро┐роЯро╛ропрпН роХрпЛро│ро╛ро▒рпБроХро│рпН рооро▒рпНро▒рпБроорпН роХро░рпБрокрпНрокрпИ роиро▓родрпНродро┐ро▒рпНроХрпБрокрпН рокропройрпНрокроЯрпБродрпНродрокрпНрокроЯрпБроХро┐ро▒родрпБ",
        "curing_en": "Decoction of bark & flowers; given in dysmenorrhea and leucorrhea",
        "curing_ta": "рокроЯрпНроЯрпИ рооро▒рпНро▒рпБроорпН рокрпВ роЪро╛ро▒рпБ; рооро╛родро╡ро┐роЯро╛ропрпН ро╡ро▓ро┐ рооро▒рпНро▒рпБроорпН ро╡рпЖро│рпНро│рпИроЪрпН роЪро┐роирпНродро▓ро┐ро▓рпН рокропройрпНрокроЯрпБроорпН"
    },
    "Basil": {
        "scientific": "Ocimum tenuiflorum (Tulsi)",
        "common_en": "Holy Basil",
        "common_ta": "родрпБро│роЪро┐",
        "properties_en": "Antioxidant, antimicrobial, adaptogenic",
        "properties_ta": "роЖроХрпНроЪро┐роЯройрпНроЯрпН роОродро┐ро░рпНрокрпНрокрпБ, роХро┐ро░рпБрооро┐ роОродро┐ро░рпНрокрпНрокрпБ, роЙроЯро▓рпН родро┤рпБро╡рпБроорпН родройрпНроорпИ",
        "therapeutic_en": "Boosts immunity, cures cold, cough, and respiratory ailments",
        "therapeutic_ta": "роирпЛропрпН роОродро┐ро░рпНрокрпНрокрпБ роЪроХрпНродро┐ропрпИ роЕродро┐роХро░ро┐роХрпНроХрпБроорпН, роЪро│ро┐, роЗро░рпБрооро▓рпН рооро▒рпНро▒рпБроорпН роЪрпБро╡ро╛роЪ роирпЛропрпНроХро│рпИ роХрпБрогрокрпНрокроЯрпБродрпНродрпБроорпН",
        "curing_en": "Leaves taken as tea/kadha; paste applied for skin diseases",
        "curing_ta": "роЗро▓рпИроХро│рпН роХро╖ро╛ропрооро╛роХ роХрпБроЯро┐роХрпНроХрокрпНрокроЯрпБроорпН; ро╡ро┐ро┤рпБродрпБ родрпЗро╛ро▓рпН роирпЗро╛ропрпНроХро│рпБроХрпНроХрпБ рокропройрпНрокроЯрпБродрпНродрокрпНрокроЯрпБроХро┐ро▒родрпБ"
    },
    "Neem": {
        "scientific": "Azadirachta indica",
        "common_en": "Neem",
        "common_ta": "ро╡рпЗрокрпНрокроорпН",
        "properties_en": "Antibacterial, antifungal, blood purifier",
        "properties_ta": "рокро╛роХрпНроЯрпАро░ро┐ропро╛ роОродро┐ро░рпНрокрпНрокрпБ, рокрпВроЮрпНроЪрпИ роОродро┐ро░рпНрокрпНрокрпБ, роЗро░родрпНрод роЪрпБродрпНродро┐роХро░ро┐рокрпНрокрпБ",
        "therapeutic_en": "Used for skin diseases, fever, diabetes, infections",
        "therapeutic_ta": "родрпЗро╛ро▓рпН роирпЗро╛ропрпНроХро│рпН, роХро╛ропрпНроЪрпНроЪро▓рпН, роирпАро░ро┐ро┤ро┐ро╡рпБ рооро▒рпНро▒рпБроорпН родрпКро▒рпНро▒рпБроирпЗро╛ропрпНроХро│рпБроХрпНроХрпБ рокропройрпНрокроЯрпБродрпНродрокрпНрокроЯрпБроХро┐ро▒родрпБ",
        "curing_en": "Neem oil, leaf paste, bark decoction",
        "curing_ta": "ро╡рпЗрокрпНрокрпЖрогрпНрогрпЖропрпН, роЗро▓рпИ ро╡ро┐ро┤рпБродрпБ, рокроЯрпНроЯрпИ роЪро╛ро▒рпБ"
    },
    "Thankuni": {
        "scientific": "Centella asiatica",
        "common_en": "Gotu Kola / Thankuni",
        "common_ta": "ро╡ро▓рпНро▓ро╛ро░рпИ",
        "properties_en": "Memory enhancer, wound healer, nervine tonic",
        "properties_ta": "роиро┐ройрпИро╡ро╛ро▒рпНро▒ро▓рпН роорпЗроорпНрокроЯрпБродрпНродро┐, роХро╛ропроорпН роЖро▒рпНро▒рпБрокро╡ройрпН, роиро░роорпНрокрпБ роЪроХрпНродро┐ роКроЯрпНроЯро┐",
        "therapeutic_en": "Improves memory, reduces anxiety, heals wounds",
        "therapeutic_ta": "роиро┐ройрпИро╡ро╛ро▒рпНро▒ро▓рпИ роорпЗроорпНрокроЯрпБродрпНродрпБроорпН, рокродроЯрпНроЯродрпНродрпИ роХрпБро▒рпИроХрпНроХрпБроорпН, роХро╛ропроЩрпНроХро│рпИ роЖро▒рпНро▒рпБроорпН",
        "curing_en": "Leaf juice or paste; used in mental weakness and skin ulcers",
        "curing_ta": "роЗро▓рпИ роЪро╛ро▒рпБ роЕро▓рпНро▓родрпБ ро╡ро┐ро┤рпБродрпБ; роорой рокро▓ро╡рпАройроорпН рооро▒рпНро▒рпБроорпН родрпЗро╛ро▓рпН рокрпБрогрпНроХро│ро┐ро▓рпН рокропройрпНрокроЯрпБроорпН"
    },
    "Vasaka": {
        "scientific": "Justicia adhatoda",
        "common_en": "Malabar Nut / Vasaka",
        "common_ta": "роЕроЯро╛родрпЛроЯрпИ",
        "properties_en": "Expectorant, bronchodilator, antispasmodic",
        "properties_ta": "роЪро│ро┐ роХро░рпИроХрпНроХрпБроорпН, роирпБро░рпИропрпАро░ро▓рпН родро┐ро▒рокрпНрокро╛ройрпН, родроЪрпИ рокро┐роЯро┐рокрпНрокрпБ роХрпБро▒рпИрокрпНрокро╛ройрпН",
        "therapeutic_en": "Cures cough, asthma, chronic bronchitis",
        "therapeutic_ta": "роЗро░рпБрооро▓рпН, роЖро╕рпНродрпБрооро╛, роирпАрогрпНроЯроХро╛ро▓ роорпВроЪрпНроЪрпБроХрпН роХрпБро┤ро╛ропрпН роЕро┤ро▒рпНроЪро┐ роХрпБрогрооро╛роХрпБроорпН",
        "curing_en": "Leaf juice mixed with honey; decoction used as expectorant",
        "curing_ta": "роЗро▓рпИ роЪро╛ро▒рпБ родрпЗройрпБроЯройрпН; роЪро╛ро▒рпБ роЪро│ро┐ роХро░рпИроХрпНроХрокрпН рокропройрпНрокроЯрпБроорпН"
    }
}

# =============================
# Prediction Function
# =============================
def predict_image(img):
    img_size = (224, 224)
    img = image.load_img(img, target_size=img_size)
    img_array = image.img_to_array(img) / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    predictions = model.predict(img_array)
    predicted_class = np.argmax(predictions, axis=1)[0]
    confidence = np.max(predictions)

    plant_name = class_names[predicted_class]
    return plant_name, confidence

# =============================
# Streamlit UI
# =============================

st.write("Upload a medicinal plant image to get its **prediction, scientific name, medicinal uses, and bilingual details (English + родрооро┐ро┤рпН)**")

uploaded_file = st.file_uploader("ЁЯУд Upload a Plant Leaf/Photo", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    st.image(uploaded_file, caption="Uploaded Image", use_container_width=True)

    with st.spinner("ЁЯФН Analyzing..."):
        plant_name, confidence = predict_image(uploaded_file)

    if plant_name in plant_info:
        info = plant_info[plant_name]

        st.success(f"тЬЕ Predicted: **{info['common_en']} / {info['common_ta']}**")
        st.write(f"**ЁЯФм Scientific Name:** {info['scientific']}")
        st.write(f"**ЁЯМ▒ Properties:** {info['properties_en']} \n\n ЁЯк┤ {info['properties_ta']}")
        st.write(f"**ЁЯТК Therapeutic Uses:** {info['therapeutic_en']} \n\n ЁЯТК {info['therapeutic_ta']}")
        st.write(f"**ЁЯз┤ Curing Details:** {info['curing_en']} \n\n ЁЯз┤ {info['curing_ta']}")
       
    else:
        st.write("тЪая╕ПInvalid image file. Please upload a proper image, The uploaded image does not match any recognized herb. Please try another image.")

        
        
